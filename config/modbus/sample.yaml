---
collector:
  name: "C32" # name is used in the key of the collected data
  uri: "tcp://127.0.0.1:5020" # uri of the connection, tcp:// and udp:// are supported for network connections, use file:///dev/ttyUSB0 for a serial device connection
  listen: false # when uri is a network connection this determine to dial or listen for a connection [optional default is false]
  baudRate: 4800 # when uri is a serial device this determines the baud rate for setting up the connection [optional default is 4800]
  dataBits: 8 # when uri is a serial device this determines the number of data bits (5, 6, 7 or 8) for setting up the connection [optional default is 8]
  stopBits: 1 # when uri is a serial device this determines the number of stop bits (1 or 2) for setting up the connection [optional default is 1]
  parity: "E" # when uri is a serial device this determines the parity (N - None, O - Odd, E - Even) for setting up the connection [optional default is "E"]
  registerGroups: # groups of registers that should be read in one request
    - slave: 1 # slave id
      functionCode: 4 # function code of the registers, 1 = coils, 2 = discrete inputs, 3 = holding registers, 4 = input registers
      address: 51436 # address of the first register to read, zero based
      numberOfRegisters: 2 # number of registers to read from address [optional default is 1]
      pollingInterval: 500000000 # interval between consecutive reads in ns [optional default is 1000000000 (1s)]
    - slave: 1 # slave id
      functionCode: 4 # function code of the registers, 1 = coils, 2 = discrete inputs, 3 = holding registers, 4 = input registers
      address: 51452 # address of the first register to read, zero based
      numberOfRegisters: 2 # number of registers to read from address [optional default is 1]
      pollingInterval: 4000000000 # interval between consecutive reads in ns [optional default is 1000000000 (1s)]
mapper:
  context: "vessels.urn:mrn:imo:mmsi:244770688" # if the data itself doesn't provide a context then this context is used
  registerMappings:
    - slave: 1 # slave id
      functionCode: 4
      address: 51436 # address of the first register to map
      numberOfRegisters: 2
      expression: "(registers[0] - 4000) * 0.00000000138888888888888"
      path: "propulsion.mainEngine.fuel.rate"
